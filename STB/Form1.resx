<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEEAAAA6CAYAAADvEjRHAAAABGdBTUEAALGPC/xhBQAABE1JREFUaEPt
        m4FR3DAQRSmBElICHUAHoYPQQegAOggdhA6gA+iAdAAdkA7Ie7Y0LMJ33B322jfhz+zASTrv6mu1lla6
        g6nx8vLyDfmBXCA3yB3yiAzBOuUXYvvj8pj9A8Z/R34jqzq7LSTmJ/KtqFgmMPAIsePPyCZ4Qu6DbIoH
        REIOi+r5gTEniCO1CnbwErHdUfnaStDmsLQ9R64RyRqCZEv6fGSgfFXn/yIaf1qafho8Sy+7QoYIkQzj
        Rx4ZKkMMXC000NGb1BieL/m3SAvjz0lpNh1Q4oi0wc7On5UmaUCntgzFEgdomoHgwWedirdwrs8aoNCv
        Z7TTxOA5rl08sHX/P8iHQS4L2OIUNQ5FGCvGsZEHGYEjnI+zjv4qYFfrrZ8ngge0BFyXqsUCG40VvqEq
        dieCLxrpIxZPQAW2DhGxnffyhdPuq6/YGwIqsLkl4qFUfQwaG2RkruK2VO0dsL2NEVelaj1o6E6vwlfP
        IoPgpsB+X+MR6xdUNGinwfQrsATQD1/pFY+leBg26Nt12Mx1PgF06K563qTexvONDxHDK1wr+voOBpTJ
        pwE66rJ3co9DR1xMDXuDFX19h8tSPCnQk0mCGa6It95AgevviJRgiB6DlsE3JWOEnugNd6W4BwWxcu/W
        BJuCvrWD/Uo+H+JUGC0ZskTQv7jjPK+FbyJnV5gE1JktcmGWlkAtOiv6hSD/xD3CfVeYBPX1avPWI+iK
        a6HnWhiZSXkrVKBvDhLat8RhNESkpsnQl06CQF/cWJ1YEINitjFzkRAHviMh4n8k4fKLhC8SOnyRAE7f
        FyQCfXOR4LlERRcY37pGItA3FwkRRxbE9FNqPhF96SSg6/02gb8xmdIvI5OAvjlIiP3ttwn8Y3Y5Iu14
        DV1zkBBPtF+nPx9iInLy3GIFulJJQM/qAedD3Emuz8aOCHRlkxCnwlMp7kFBy1DKRgo92STEV+P7NyGF
        H2djRwZ60khAR3um8j6PSuH6bOwEQIe5DLe1k2eW0LHZmQqV0Ru2P8ldKOhHjHnrz1So1BtiwuGmVO0t
        6EN7+vTxqphG7b2E1GzTmMB2A34MhpvnUGncXpFLW8yMCeyOJ+zbxR4ay2BcQO1+5WUmYG971Wj7HTJf
        am967A0R2NkS0B+y7AK+PETEYmMEtunBcQqIzx8r8pCWCHFRqhcDbPLNFoOgGO9clYdJRIwRQoWLmB7Y
        4dV/vTRifI/lobra0MXq3BvmAegdummv1047OChwHdFOD0chjQz06Jnt3Bd5t21R5Pyrm58IyTAyjz4S
        PFNP9LdUQ7+x8Lh9nisFKNYdh8gQbli8GO7voXYaHb7niDvfh0Zd6JGpyeGVwBDJGIoXEZLiKNZfuimO
        7HH4rNhh27WBLsKRN0EySyxaC4xymhgz2jfJGHDU3eXuz00ajJUQR8ucwS6k2Gm9S1L3cu8yCDojMU4d
        RYI886hSy5PXHgcH/wDIF2Ch+Gap/wAAAABJRU5ErkJggg==
</value>
  </data>
</root>